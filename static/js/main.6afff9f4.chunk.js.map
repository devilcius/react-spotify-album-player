{"version":3,"sources":["../../dist/index.es.js","Demo.jsx","App.jsx","index.js"],"names":["index_es_classCallCheck","instance","Constructor","TypeError","index_es_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","index_es_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","index_es_possibleConstructorReturn","self","call","ReferenceError","index_es_Track","_React$Component","Track","this","_this","getPrototypeOf","state","isPlaying","audio","Audio","getDuration","bind","playTrack","ms","min","sec","Math","round","setAttribute","track","preview_url","load","newProps","event","preventDefault","paused","setState","play","onPlayingStatusChange","addEventListener","pause","playButtonClassNames","node_modules_react_default","a","createElement","className","listGroupItemClassName","onClick","href","listGroupItemLink","style","cursor","title","tooltip","track_number","name","duration_ms","listGroupItemBadgeClassName","Component","propTypes","prop_types_default","string","func","isRequired","object","defaultProps","undefined","index_es_TrackList","TrackList","trackChangedStatus","audioTrack","spotifyTrack","updateTrackPlayingStatus","trackNodesData","tracks","map","index","previewWarningText","listGroupClassName","array","index_es_SpotifyPlayer","SpotifyPlayer","albumData","playerPlaceholder","albumName","artistName","fetchAlbumData","fetchTracks","firePlayingStatusChangeEvent","xhr","XMLHttpRequest","that","queryString","open","setRequestHeader","token","onreadystatechange","readyState","status","response","JSON","parse","responseText","albums","items","id","data","noDataFoundText","send","albumId","callback","onTrackPlayed","onTrackPaused","console","error","playlistHeader","showHeader","external_urls","spotify","alt","height","src","images","url","width","release_date","dangerouslySetInnerHTML","__html","bool","Demo","classCallCheck","possibleConstructorReturn","clientId","scopes","redirectUri","login","assertThisInitialized","updateRecord","spotifyToken","spotifyUri","spotifyUser","window","location","hash","substr","split","opener","spotifyCallback","_this2","popup","concat","payload","close","fetch","headers","Authorization","then","json","artist","ReactDOM","findDOMNode","refs","release","uri","react_default","clearTrackInfo","setTrackInfo","onSubmit","placeholder","ref","required","type","React","require","App","pkgInfo","description","react_ghfork_default","project","user","Demo_Demo","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.6afff9f4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Track = function (_React$Component) {\n  inherits(Track, _React$Component);\n\n  function Track(props) {\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, (Track.__proto__ || Object.getPrototypeOf(Track)).call(this, props));\n\n    _this.state = {\n      isPlaying: false\n    };\n    _this.audio = new Audio();\n    _this.getDuration = _this.getDuration.bind(_this);\n    _this.playTrack = _this.playTrack.bind(_this);\n    return _this;\n  }\n\n  createClass(Track, [{\n    key: 'getDuration',\n    value: function getDuration(ms) {\n      var min = ms / 1000 / 60 << 0;\n      var sec = ms / 1000 % 60;\n      return Math.round(min, -2) + ':' + (Math.round(sec, -2) < 10 ? '0' + Math.round(sec, -2) : Math.round(sec, -2));\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.audio.setAttribute('src', this.props.track.preview_url);\n      this.audio.load();\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(newProps) {\n      if (newProps.track.preview_url !== this.props.track.preview_url) {\n        this.audio.setAttribute('src', newProps.track.preview_url);\n        this.audio.load();\n      }\n    }\n  }, {\n    key: 'playTrack',\n    value: function playTrack(event) {\n      event.preventDefault();\n\n      if (this.audio.paused) {\n        this.setState({\n          isPlaying: true\n        }, function () {\n          this.audio.play();\n          this.props.onPlayingStatusChange(true, this.audio, this.props.track);\n          this.audio.addEventListener('ended', function () {\n            this.setState({\n              isPlaying: false\n            });\n            this.props.onPlayingStatusChange(false, this.audio, this.props.track);\n          });\n        });\n      } else {\n        this.audio.pause();\n        this.setState({\n          isPlaying: false\n        }, function () {\n          this.props.onPlayingStatusChange(false, this.audio, this.props.track);\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var playButtonClassNames = this.state.isPlaying ? 'fa fa-pause' : 'fa fa-play';\n      var playButtonStyle = {\n        cursor: 'default'\n      };\n      return React.createElement('li', {\n        className: this.props.listGroupItemClassName,\n        onClick: this.playTrack\n      }, React.createElement('a', {\n        href: '#',\n        className: this.props.listGroupItemLink,\n        style: playButtonStyle,\n        title: this.props.tooltip\n      }, this.props.track.track_number, '. ', this.props.track.name, ' (', this.getDuration(this.props.track.duration_ms), ')'), React.createElement('span', {\n        className: this.props.listGroupItemBadgeClassName\n      }, React.createElement('i', {\n        className: playButtonClassNames\n      })));\n    }\n  }]);\n  return Track;\n}(React.Component);\n\nTrack.propTypes = {\n  listGroupItemBadgeClassName: PropTypes.string,\n  listGroupItemClassName: PropTypes.string,\n  listGroupItemLink: PropTypes.string,\n  onPlayingStatusChange: PropTypes.func,\n  //handler on playing status change, function(isPlaying, audioTrack, spotifyTrack),\n  tooltip: PropTypes.string.isRequired,\n  track: PropTypes.object.isRequired\n};\nTrack.defaultProps = {\n  onPlayingStatusChange: undefined\n};\n\nvar TrackList = function (_React$Component) {\n  inherits(TrackList, _React$Component);\n\n  function TrackList(props) {\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, (TrackList.__proto__ || Object.getPrototypeOf(TrackList)).call(this, props));\n\n    _this.trackChangedStatus = _this.trackChangedStatus.bind(_this);\n    return _this;\n  }\n\n  createClass(TrackList, [{\n    key: 'trackChangedStatus',\n    value: function trackChangedStatus(isPlaying, audioTrack, spotifyTrack) {\n      this.props.updateTrackPlayingStatus(isPlaying, audioTrack, spotifyTrack);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var trackNodesData = this.props.tracks.map(function (track, index) {\n        return React.createElement(Track, {\n          key: index,\n          listGroupItemBadgeClassName: this.props.listGroupItemBadgeClassName,\n          listGroupItemClassName: this.props.listGroupItemClassName,\n          listGroupItemLink: this.props.listGroupItemLink,\n          onPlayingStatusChange: this.trackChangedStatus,\n          tooltip: this.props.previewWarningText,\n          track: track\n        });\n      }.bind(this));\n      return React.createElement('ul', {\n        className: this.props.listGroupClassName\n      }, trackNodesData);\n    }\n  }]);\n  return TrackList;\n}(React.Component);\n\nTrackList.propTypes = {\n  listGroupItemBadgeClassName: PropTypes.string,\n  listGroupClassName: PropTypes.string,\n  listGroupItemClassName: PropTypes.string,\n  listGroupItemLink: PropTypes.string,\n  previewWarningText: PropTypes.string,\n  tracks: PropTypes.array,\n  updateTrackPlayingStatus: PropTypes.func\n};\nTrackList.defaultProps = {\n  tracks: [],\n  updateTrackPlayingStatus: undefined\n};\n\nvar SpotifyPlayer = function (_React$Component) {\n  inherits(SpotifyPlayer, _React$Component);\n\n  function SpotifyPlayer(props) {\n    classCallCheck(this, SpotifyPlayer);\n\n    var _this = possibleConstructorReturn(this, (SpotifyPlayer.__proto__ || Object.getPrototypeOf(SpotifyPlayer)).call(this, props));\n\n    _this.state = {\n      albumData: null,\n      playerPlaceholder: '<i class=\"fa fa-spinner fa-spin\"></i>',\n      albumName: _this.props.albumName,\n      artistName: _this.props.artistName\n    };\n    _this.fetchAlbumData = _this.fetchAlbumData.bind(_this);\n    _this.fetchTracks = _this.fetchTracks.bind(_this);\n    _this.firePlayingStatusChangeEvent = _this.firePlayingStatusChangeEvent.bind(_this);\n    return _this;\n  }\n\n  createClass(SpotifyPlayer, [{\n    key: 'fetchAlbumData',\n    value: function fetchAlbumData() {\n      var xhr = new XMLHttpRequest();\n      var url = 'https://api.spotify.com/v1/search';\n      var that = this;\n      var queryString = '?q=album:' + this.state.albumName + ' artist:' + this.state.artistName;\n      queryString += '&type=album';\n      xhr.open('get', url + queryString);\n      xhr.setRequestHeader('Authorization', 'Bearer ' + this.props.token);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            var response = JSON.parse(xhr.responseText);\n\n            if (response.albums.items.length > 0) {\n              that.fetchTracks(response.albums.items[0].id, function (data) {\n                if (data.tracks.items.length > 0) {\n                  that.setState({\n                    albumData: data\n                  });\n                } else {\n                  that.setState({\n                    albumData: null,\n                    playerPlaceholder: that.props.noDataFoundText\n                  });\n                }\n              });\n            } else {\n              that.setState({\n                albumData: null,\n                playerPlaceholder: that.props.noDataFoundText\n              });\n            }\n          } else {\n            that.setState({\n              albumData: null,\n              playerPlaceholder: that.props.noDataFoundText\n            });\n          }\n        }\n      };\n\n      xhr.send();\n    }\n  }, {\n    key: 'fetchTracks',\n    value: function fetchTracks(albumId, callback) {\n      var xhr = new XMLHttpRequest();\n      var that = this;\n      xhr.open('get', 'https://api.spotify.com/v1/albums/' + albumId);\n      xhr.setRequestHeader('Authorization', 'Bearer ' + this.props.token);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            var response = JSON.parse(xhr.responseText);\n            callback(response);\n          } else {\n            that.setState({\n              albumData: null,\n              playerPlaceholder: that.props.noDataFoundText\n            });\n          }\n        }\n      };\n\n      xhr.send();\n    }\n  }, {\n    key: 'firePlayingStatusChangeEvent',\n    value: function firePlayingStatusChangeEvent(isPlaying, audioTrack, spotifyTrack) {\n      if (isPlaying && this.props.onTrackPlayed) {\n        this.props.onTrackPlayed(audioTrack, spotifyTrack);\n      } else if (!isPlaying && this.props.onTrackPaused) {\n        this.props.onTrackPaused(audioTrack, spotifyTrack);\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.token === null) {\n        console.error('A valid access token is needed to access spotify API');\n        return;\n      }\n\n      this.fetchAlbumData();\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(newProps) {\n      if (newProps.albumName !== this.props.albumName || newProps.artistName !== this.props.artistName) {\n        this.setState({\n          artistName: newProps.artistName,\n          albumName: newProps.albumName\n        }, this.fetchAlbumData);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var playlistHeader = function () {\n        if (this.props.showHeader) {\n          return React.createElement('div', {\n            className: 'media'\n          }, React.createElement('div', {\n            className: 'media-left'\n          }, React.createElement('a', {\n            href: this.state.albumData.external_urls.spotify\n          }, React.createElement('img', {\n            alt: 'cover image',\n            className: 'media-object',\n            height: '64',\n            src: this.state.albumData.images[0].url,\n            width: '64'\n          }))), React.createElement('div', {\n            className: 'media-body'\n          }, React.createElement('h4', {\n            className: 'media-heading'\n          }, this.state.albumData.name), this.state.albumData.release_date));\n        }\n\n        return null;\n      }.bind(this);\n\n      if (this.state.albumData === null) {\n        return React.createElement('section', {\n          className: 'spotify-player'\n        }, React.createElement('div', {\n          dangerouslySetInnerHTML: {\n            __html: this.state.playerPlaceholder\n          }\n        }));\n      } else {\n        return React.createElement('section', {\n          className: 'spotify-player'\n        }, playlistHeader(), React.createElement(TrackList, {\n          listGroupClassName: this.props.listGroupClassName,\n          listGroupItemBadgeClassName: this.props.listGroupItemBadgeClassName,\n          listGroupItemClassName: this.props.listGroupItemClassName,\n          listGroupItemLink: this.props.listGroupItemLink,\n          previewWarningText: this.props.previewWarningText,\n          tracks: this.state.albumData.tracks.items,\n          updateTrackPlayingStatus: this.firePlayingStatusChangeEvent\n        }));\n      }\n    }\n  }]);\n  return SpotifyPlayer;\n}(React.Component);\n\nSpotifyPlayer.propTypes = {\n  albumName: PropTypes.string.isRequired,\n  artistName: PropTypes.string.isRequired,\n  listGroupClassName: PropTypes.string,\n  listGroupItemBadgeClassName: PropTypes.string,\n  listGroupItemClassName: PropTypes.string,\n  listGroupItemLink: PropTypes.string,\n  noDataFoundText: PropTypes.string,\n  onTrackPaused: PropTypes.func,\n  onTrackPlayed: PropTypes.func,\n  previewWarningText: PropTypes.string,\n  showHeader: PropTypes.bool,\n  token: PropTypes.string\n};\nSpotifyPlayer.defaultProps = {\n  listGroupClassName: 'list-group',\n  listGroupItemBadgeClassName: 'badge',\n  listGroupItemClassName: 'list-grouprequired to work-item',\n  listGroupItemLink: '',\n  noDataFoundText: 'No data found',\n  onTrackPaused: undefined,\n  onTrackPlayed: undefined,\n  previewWarningText: 'Only 30 seconds preview',\n  showHeader: true,\n  token: null //https://developer.spotify.com/web-api/\n\n}; // module.exports = require('./SpotifyPlayer');\n// export { Track } from \"./Track\";\n// export { TrackList } from \"./TrackList\";\n\nexport { SpotifyPlayer };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { SpotifyPlayer } from 'react-spotify-album-player';\r\n\r\nexport default class Demo extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.clientId = '0454e14b019d4236b4cf5fd4fd9525ee';\r\n\t\tthis.scopes = 'user-top-read';\r\n\t\tthis.redirectUri = 'https://devilcius.github.io/react-spotify-album-player/';\r\n\t\t// this.redirectUri = 'http://localhost:3000/';\r\n\t\tthis.login = this.login.bind(this);\r\n\t\tthis.updateRecord = this.updateRecord.bind(this);\r\n\t\tthis.state = {\r\n\t\t\talbumName: 'Milo Goes to College',\r\n\t\t\tartistName: 'Descendents',\r\n\t\t\tspotifyToken: null,\r\n\t\t\tspotifyUri: null,\r\n\t\t\tspotifyUser: null\r\n\t\t};\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tlet spotifyToken = window.location.hash.substr(1).split('&')[0].split(\"=\")[1];\r\n\t\tif (spotifyToken) {\r\n\t      window.opener.spotifyCallback(spotifyToken)\r\n\t  }\r\n\t}\r\n\r\n\tlogin() {\r\n\t\tconst popup = window.open(`https://accounts.spotify.com/authorize?client_id=${this.clientId}&response_type=token&redirect_uri=${this.redirectUri}&scope=${this.scopes}&show_dialog=true`, 'Login with Spotify', 'width=800,height=600')\r\n\r\n\t\twindow.spotifyCallback = (payload) => {\r\n\t\t\tpopup.close()\r\n\r\n\t\t\tfetch('https://api.spotify.com/v1/me', {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `Bearer ${payload}`\r\n\t\t\t\t}\r\n\t\t\t}).then(response => {\r\n\t\t\t\treturn response.json()\r\n\t\t\t}).then(data => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tspotifyToken: payload,\r\n\t\t\t\t\tspotifyUser: data\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tupdateRecord(event) {\r\n\t\tevent.preventDefault();\r\n\t\tvar artist = ReactDOM.findDOMNode(this.refs.artist).value;\r\n\t\tvar release = ReactDOM.findDOMNode(this.refs.release).value;\r\n\t\tthis.setState({artistName: artist, albumName: release});\r\n\t}\r\n\tsetTrackInfo(audioTrack, spotifyTrack) {\r\n\t\tthis.setState({spotifyUri: spotifyTrack.uri});\r\n\t}\r\n\tclearTrackInfo() {\r\n\t\tthis.setState({spotifyUri: null});\r\n\t}\r\n\trender() {\r\n\t\treturn\t(\r\n\t\t\t<div>\r\n\t\t\t{this.state.spotifyToken !== null &&\r\n\t\t\t\t<div className=\"demo-container\">\r\n\t\t\t\t\t<p>Click on a song to preview it</p>\r\n\t\t\t\t <SpotifyPlayer\r\n\t\t\t\t\talbumName={this.state.albumName}\r\n\t\t\t\t\tartistName={this.state.artistName}\r\n\t\t\t\t\tlistGroupClassName=\"pure-menu-list\"\r\n\t\t\t\t\tlistGroupItemClassName=\"pure-menu-item\"\r\n\t\t\t\t\tlistGroupItemLink=\"pure-menu-link\"\r\n\t\t\t\t\tnoDataFoundText=\"No data found\"\r\n\t\t\t\t\tonTrackPaused={this.clearTrackInfo.bind(this)}\r\n\t\t\t\t\tonTrackPlayed={this.setTrackInfo.bind(this)}\r\n\t\t\t\t\tpreviewWarningText=\"Only 30 seconds preview\"\r\n\t\t\t\t\tshowHeader\r\n\t\t\t\t\ttoken={this.state.spotifyToken}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div className=\"form-container\">\r\n\t\t\t\t\t<form className=\"pure-form\" onSubmit={this.updateRecord}>\r\n\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t<legend>Find another album</legend>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"artist name\"\r\n\t\t\t\t\t\t\t\tref=\"artist\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder=\"release name\"\r\n\t\t\t\t\t\t\t\tref=\"release\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button className=\"pure-button\" >Search</button>\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div className=\"extra-info\">\r\n\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\tOn playing event:\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\tSpotify URI: <strong>\r\n\t\t\t\t\t\t{this.state.spotifyUri}\r\n\t\t\t\t\t</strong>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\t\t{this.state.spotifyToken === null &&\r\n\t\t\t<div>\r\n\t\t\t\t<p><strong>You must authorize this app</strong></p>\r\n\t\t\t\t<button className=\"pure-button\" onClick={this.login}>authorize</button>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n}\r\n","import React from 'react';\nimport Fork from 'react-ghfork';\nimport pkgInfo from '../package.json';\nimport Demo from './Demo.jsx';\nrequire('purecss');\nrequire('react-ghfork/gh-fork-ribbon.css');\nrequire('highlight.js/styles/github.css');\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"pure-g\">\n          <header className=\"pure-u-1\">\n              <h1>{pkgInfo.name}</h1>\n              <div className=\"description\">{pkgInfo.description}</div>\n          </header>\n        <Fork className=\"right\" project={pkgInfo.user + '/' + pkgInfo.name} />\n            <article className=\"pure-u-1\">\n              <h2>Demonstration</h2>                  \n                  <Demo />\n          </article>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './main.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}